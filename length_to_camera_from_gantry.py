# -*- coding: utf-8 -*-
"""length to camera from gantry

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l3zInumobOsy-mOt5EHUupXG4j5pKZL1
"""



import numpy as np

#grid dimensions
grid_y = 100
grid_x = 60

#create grid of square center coordinates
x_coords = np.arange(grid_x) + 0.5  # column centers
y_coords = np.arange(grid_y) + 0.5  # row centers
X, Y = np.meshgrid(x_coords, y_coords)

#calculate center of the entire grid in real (centered) coordinates
center_x = grid_x / 2
center_y = grid_y / 2

#compute distance from each square's center to the grid center
distances = np.sqrt((X - center_x)**2 + (Y - center_y)**2)

#print all distances using 1-based indexing
print(f"All distances from center of each square to grid center ({center_y}, {center_x}):\n")
for y in range(grid_y):
    for x in range(grid_x):
        print(f"Distance at ({y+1}, {x+1}): {distances[y, x]:.4f}")

#save distances to a text file
with open("grid_distances.txt", "w") as f:
    f.write(f"Distances from center of each square to grid center ({center_y}, {center_x}):\n\n")
    for y in range(grid_y):
        for x in range(grid_x):
            f.write(f"Distance at ({y+1}, {x+1}): {distances[y, x]:.4f}\n")

